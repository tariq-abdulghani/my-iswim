from platform.io import {print}

-- 1 function as expression

let sqr(x)= x^2
let abs(x)= {
    x: x > 0,
    -x: x < 0
   }

-- some special math constants e , PI,

let sigmoid(x)= 1/(1+ e^(-x))
let tanh(x) = (e^x - e^-x)/(e^x + e^-x)

--  2 function as algorithm imperative way to do things

func fac(n):
    if 0 <= n <= 1 :
        ret n
    elf 1 < n:
        ret n*fac(n-1)
    else:
        error 'negative number !!'

-- 3 as lambdas
arr.map(el->el.id)


-- functions are first class citizens and also there is an operation defined on them
    which is composition

let f,g,h be functions then
f*g*h(x) -> f(g(h(x)))

----------------------------------------------------------------

-- imperative part

-- loops
for i in [1:10]:
    print i

while condition:
    do some thing